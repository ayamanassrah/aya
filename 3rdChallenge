void main() {
// Create a sample linked list
LinkedList linkedList = LinkedList();
linkedList.addNode(1);
linkedList.addNode(2);
linkedList.addNode(3);
linkedList.addNode(4);

// Print the linked list in reverse order
print('Linked List in Reverse Order:');
printInReverse(linkedList.head);
}

class Node {
int data;
Node? next;

Node( this.data) ;
}

class LinkedList {
Node? head;

void addNode(int data) {
Node newNode = Node(data);
if (head == null) {
head = newNode;
} else {
Node? temp = head;
while (temp!.next != null) {
temp = temp.next;
}
temp.next = newNode;
}
}
}

void printInReverse(Node? node) {
if (node == null) {
return;
}

// Recursively call the function for the next node before printing the current node
printInReverse(node.next);

// Print the current node's data
print(node.data);
}
